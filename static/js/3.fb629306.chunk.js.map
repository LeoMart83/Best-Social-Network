{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","className","classes","profileStatus","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","formSummuryError","createField","Input","type","Textarea","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","profileInformation","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","onClick","Contact","href","target","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","user","profilePicture","photoChange","files","initialValues","formData","then","Post","item","message","likesCount","MyPosts","React","memo","createPostApi","profilePage","userPosts","getPostsApi","postsElements","posts","p","id","console","log","postsBlock","AddPostFormRedux","values","newPostText","maxLength50","maxLengthCreator","Field","component","name","placeholder","validate","required","MyPostsContainer","this","loadPosts","Component","compose","connect","state","Profile","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.fb629306.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePicture\":\"ProfileInfo_profilePicture__3pL4S\",\"contact\":\"ProfileInfo_contact__2xh0h\",\"formSummuryError\":\"ProfileInfo_formSummuryError__1o6Xj\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3yUNI\",\"photoChange\":\"ProfileInfo_photoChange__3F-HC\",\"profileInformation\":\"ProfileInfo_profileInformation__1FIwf\",\"profileStatus\":\"ProfileInfo_profileStatus__1m272\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2rRYv\",\"posts\":\"MyPosts_posts__286hW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1j058\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState} from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.profileStatus}>\r\n            {!editMode &&\r\n            <div>\r\n               <b>Status: </b> <span onDoubleClick={() => setEditMode(true)}>{props.status || '-----'}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={() => {\r\n                           setEditMode(false);\r\n                           props.updateStatus(status)\r\n                       }}\r\n                       value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import {createField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        { error && <div className={classes.formSummuryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name:</b>: {createField('Full name', 'fullName', [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b>: {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills:</b>:\r\n            {createField('My professional skills', 'lookingForAJobDescription', [], Textarea,)}\r\n        </div>\r\n        <div>\r\n            <b>About me:</b>\r\n            {createField('About me', 'aboutMe', [], Textarea, )}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={classes.contact}>\r\n                <b>{key}: {createField(key, 'contacts.' + key, [], Input)}  </b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport user from '../../../Assets/Images/user.png';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport { useState } from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.descriptionBlock}>\r\n\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n\r\n            <img src={profile.photos.large ? profile.photos.large : user} className={classes.profilePicture} />\r\n            {isOwner && <div className={classes.photoChange}>Change photo: <input type={'file'} onChange={onMainPhotoSelected} /></div>}\r\n            <hr />\r\n\r\n\r\n            {editMode\r\n                ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                : <ProfileData goToEditMode={() => {\r\n                    setEditMode(true)\r\n                }} profile={profile} isOwner={isOwner} />}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div className={classes.profileInformation}>\r\n        <p>Personal profile information:</p>\r\n\r\n        {isOwner && <div>\r\n\r\n        </div>}\r\n        <div>\r\n            <b>Full name:</b>{profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>About me:</b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {profile.lookingForAJob ? 'Yes!' : 'No.'}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                 return profile.contacts[key] ? <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} /> : null \r\n            })}\r\n        </div>\r\n        <button onClick={goToEditMode}>Edit</button>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={classes.contact}><b>{contactTitle}</b>: <a href={contactValue} target='_blank'>{contactValue}</a> </div>\r\n}\r\n\r\nexport default ProfileInfo;","import classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return <div className={classes.item}>\r\n        <img src='https://images-na.ssl-images-amazon.com/images/S/sgp-catalog-images/region_US/viacom-Avatar-Sea1-Full-Image_GalleryBackground-en-US-1552014700974._SX1080_.jpg' />\r\n        {props.message}    \r\n        <div>\r\n            <span>Likes </span> {props.likesCount}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {createPostApi} from \"../../../redux/profile-reducer\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let {createPostApi, profilePage, getPostsApi, userPosts} = props;\r\n\r\n    let postsElements = profilePage.posts.map(p => <Post message={p.message} likesCount={p.likesCount}\r\n                                                         key={p.id}/>);\r\n\r\n    console.log(profilePage.posts);\r\n    console.log(userPosts);\r\n\r\n    return <div className={classes.postsBlock}>\r\n        <h3> My Posts </h3>\r\n        <AddPostFormRedux onSubmit={(values) => {\r\n            createPostApi(values.newPostText)\r\n        }}/>\r\n        <div className={classes.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n});\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddNewPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' placeholder='Enter new post'\r\n                       validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost, createPostApi, getPostsApi} from \"../../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profilePage: state.profilePage,\r\n})\r\n\r\nclass MyPostsContainer extends React.Component {\r\n\r\n    loadPosts() {\r\n        this.props.getPostsApi();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadPosts();\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <MyPosts profilePage={this.props.profilePage}\r\n                     createPostApi={this.props.createPostApi}\r\n                     getPostsApi={this.props.getPostsApi}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {createPostApi, getPostsApi})\r\n)(MyPostsContainer)","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}/>\r\n\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import * as React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapState = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    })\r\n\r\n}\r\n\r\nexport default compose(\r\n    connect(mapState, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);"],"sourceRoot":""}