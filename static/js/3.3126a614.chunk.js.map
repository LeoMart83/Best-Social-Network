{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","classes","formSummuryError","createField","Input","type","Textarea","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","user","profilePicture","target","files","initialValues","formData","then","Post","item","message","likesCount","MyPosts","React","memo","console","log","addPost","postsElements","profilePage","posts","p","id","postsBlock","AddPostFormRedux","values","newPostText","maxLength10","maxLengthCreator","Field","component","name","placeholder","validate","required","MyPostsContainer","connect","state","dispatch","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.3126a614.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3yUNI\",\"profilePicture\":\"ProfileInfo_profilePicture__3pL4S\",\"contact\":\"ProfileInfo_contact__2xh0h\",\"formSummuryError\":\"ProfileInfo_formSummuryError__1o6Xj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2rRYv\",\"posts\":\"MyPosts_posts__286hW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1j058\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState} from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n               <b>Status: </b> <span onDoubleClick={() => setEditMode(true)}>{props.status || '-----'}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={() => {\r\n                           setEditMode(false);\r\n                           props.updateStatus(status)\r\n                       }}\r\n                       value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import {createField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        { error && <div className={classes.formSummuryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name:</b>: {createField('Full name', 'fullName', [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b>: {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills:</b>:\r\n            {createField('My professional skills', 'lookingForAJobDescription', [], Textarea,)}\r\n        </div>\r\n        <div>\r\n            <b>About me:</b>\r\n            {createField('About me', 'aboutMe', [], Textarea, )}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={classes.contact}>\r\n                <b>{key}: {createField(key, 'contacts.' + key, [], Input)}  </b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport user from '../../../Assets/Images/user.png';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport {useState} from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large ? profile.photos.large : user} className={classes.profilePicture}/>\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}/>}\r\n\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full name:</b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me:</b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.contact}><b>{contactTitle}</b>: {contactValue} </div>\r\n}\r\n\r\nexport default ProfileInfo;","import classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return <div className={classes.item}>\r\n        <img src='https://images-na.ssl-images-amazon.com/images/S/sgp-catalog-images/region_US/viacom-Avatar-Sea1-Full-Image_GalleryBackground-en-US-1552014700974._SX1080_.jpg' />\r\n        {props.message}    \r\n        <div>\r\n            <span>Likes </span> {props.likesCount}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    console.log(\"RENDERED\");\r\n\r\n    let {addPost, profilePage} = props;\r\n\r\n    let postsElements = profilePage.posts.map(p => <Post message={p.message} likesCount={p.likesCount}\r\n                                                         key={p.id}/>);\r\n\r\n    return <div className={classes.postsBlock}>\r\n        <h3> My Posts </h3>\r\n        <AddPostFormRedux onSubmit={(values) => {\r\n            addPost(values.newPostText)\r\n        }}/>\r\n        <div className={classes.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' placeholder='Enter new post'\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost, updateNewPostText} from \"../../../redux/profile-reducer\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profilePage: state.profilePage,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPost(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import * as React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapState = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    })\r\n\r\n}\r\n\r\nexport default compose(\r\n    connect(mapState, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);"],"sourceRoot":""}